name: open-auth
networks:
    open_auth_network:
        driver: bridge
services:
    db:
        container_name: open-auth-db
        image: mysql:8.0
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: $AUTH_MYSQL_DATABASE
            MYSQL_ROOT_PASSWORD: $AUTH_MYSQL_PASSWORD
        ports:
            - '${AUTH_MYSQL_PORT}:3306'
        healthcheck:
            test: [ "CMD", "mysqladmin" ,"ping",  "--silent" ]
            timeout: 20s
            retries: 10
        volumes:
            - open_auth_db:/var/lib/mysql
            - ./.docker/my.cnf:/etc/mysql/my.cnf
            - ./src/data:/data
        networks:
            - open_auth_network
    backend:
        container_name: open-auth-backend
        build:
            context: workspaces/backend
            dockerfile: .docker/Dockerfile
        environment:
            AUTH_MYSQL_DATABASE: $AUTH_MYSQL_DATABASE
            AUTH_MYSQL_USERNAME: $AUTH_MYSQL_USERNAME
            AUTH_MYSQL_PASSWORD: $AUTH_MYSQL_PASSWORD
            AUTH_MYSQL_HOST: $AUTH_MYSQL_HOST
            AUTH_MYSQL_PORT: $AUTH_MYSQL_PORT
            AUTH_API_PORT: $AUTH_API_PORT
            SUPERUSER_EMAIL: $SUPERUSER_EMAIL
            SUPERUSER_PASS: $SUPERUSER_PASS
            AUTH0_ISSUER_BASE_URL: $AUTH0_ISSUER_BASE_URL
            AUTH0_AUDIENCE: $AUTH0_AUDIENCE
            AUTH_JWT_PRIVATE_KEY: $AUTH_JWT_PRIVATE_KEY
            AUTH_JWT_PUBLIC_KEY: $AUTH_JWT_PUBLIC_KEY
        depends_on:
            db:
                condition: service_healthy
        networks:
            - open_auth_network
        volumes:
            - open_auth_backend:/app
        ports:
            - '${AUTH_API_PORT}:${AUTH_API_PORT}'
        expose:
            - '${AUTH_API_PORT}'
        command: 'yarn start:prod'
volumes:
    open_auth_db:
    open_auth_backend:
